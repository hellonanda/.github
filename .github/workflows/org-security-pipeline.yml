name: Org Security Secrets + SBOM + Vuln Check

on:
  workflow_dispatch: {}
  workflow_call:
    inputs:
      image_name:
        description: "Local image tag to build/scan (e.g., myapp)"
        required: false
        type: string
        default: app
      context:
        description: "Docker build context"
        required: false
        type: string
        default: .
      dockerfile:
        description: "Path to Dockerfile"
        required: false
        type: string
        default: Dockerfile
      build_image:
        description: "Build image before SBOM/scan"
        required: false
        type: boolean
        default: true
      severity_cutoff:
        description: "Fail on this severity or higher (low|medium|high|critical)"
        required: false
        type: string
        default: high
      scan_secrets:
        description: "Run hard-coded secret scan (Gitleaks)"
        required: false
        type: boolean
        default: true
    secrets:
      GITLEAKS_LICENSE:
        required: false

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  build_and_sbom:
    name: Build image & generate SBOM (Syft)
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout
        uses: actions/checkout@v4
  
      - name: Set up Buildx
        if: ${{ inputs.build_image }}
        uses: docker/setup-buildx-action@v3
  
      - name: Build Docker image (CLI)
        run: docker build -t ${{ inputs.image_name }}:${{ github.sha }} -f ${{ inputs.dockerfile }} .
      
      - name: Generate SBOM (Syft)
        run: syft ${{ inputs.image_name }}:${{ github.sha }} -o spdx-json > sbom.spdx.json 
        
      - name: Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
  
      - name: Scan SBOM with Grype (JSON + SARIF + Console)
        run: |
          # JSON report
          grype sbom:sbom.spdx.json --scope all-layers -o json > grype-results.json
  
          # SARIF report for GitHub Code Scanning
          grype sbom:sbom.spdx.json --scope all-layers -o sarif > grype-results.sarif
  
          # Console table + fail check
          grype sbom:sbom.spdx.json --scope all-layers -o table --fail-on high
  
      - name: Upload SARIF to GitHub Code Scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: grype-results.sarif
